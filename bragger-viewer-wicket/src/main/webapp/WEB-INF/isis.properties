#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#  
#         http://www.apache.org/licenses/LICENSE-2.0
#         
#  Unless required by applicable law or agreed to in writing,
#  software distributed under the License is distributed on an
#  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#  KIND, either express or implied.  See the License for the
#  specific language governing permissions and limitations
#  under the License.


#################################################################################
#
# specify system components.
#
# The values correspond to the named components in the installer-registry.properties file
# in the org.apache.isis.runtimes.dflt:runtime JAR (in the org.apache.isis.runtimes.dflt.runtime package)
#
# Although all configuration could reside in isis.properties, the recommendation is
# to split out into component specific files:
# 
#    xxx_yyy.properties files
#
# where
#    * xxx is the component type, and
#    * yyy is the component name.
#
# For example, persistor_sql.properties holds configuration information specific to the
#
#
# If the components are changed, also remember to edit pom.xml (further comments can be 
# found in the persistor_xxx.properties files)
#
#################################################################################

#
# configure the persistor (object store) to use
#
# * in-memory   requires no additional configuration, but stores object in-memory.
#               Only suitable for prototyping
# * datanucleus uses JDO DataNucleus to persist objects to relational database.
#               for objectstore-specific properties, see persistor_datanucleus.properties   
# * fileserver  uses a simple FileServer to persist objects as JSON documents.  It requires the fileserver component to be running
#               for objectstore-specific properties, see persistor_fileserver.properties 
# * mongodb     uses MongoDB to be persist objects as JSON documents.  It requires MongoDB to be installed and running
#               for objectstore-specific properties, see persistor_fileserver.properties  
# * sql         uses an RDBMS to persist objects as table rows.  
#               for objectstore-specific properties, see persistor_sql.properties
# * xml         uses the XML ObjectStore to be persist objects to a set of XML files.  Only suitable for prototyping.
#               for objectstore-specific properties, see persistor_xml.properties 
#
# NOTE:
# * edit isis.services (below) and pom.xml to reference appropriate objstore-xxx module
# * for datanucleus objectstore, also edit isis.reflector.facets and isis.reflector.class-substitutor (below)
# * for sql and datanucleus objectstores, also edit pom.xml to reference appropriate JDBC driver
# 

isis.persistor=in-memory
#isis.persistor=datanucleus
#isis.persistor=fileserver
#isis.persistor=mongodb
#isis.persistor=sql
#isis.persistor=xml





#
# configure authentication mechanis to use (to logon to the system)
# note that the Scimpi view allows access to anonymous users
# 
isis.authentication=file


#
# configure authorization mechanism to use

# The authorization mechanism define each users' permissions to view/edit object properties 
# or collections, and to view/invoke object actions
#
# >>>
# >>> NB: authorization also requires a "facet decorator" to be installed, 
# >>> 
# 
isis.authorization=file




#
# configure the user profile store to use.
# 
# the user profile store is supported by some viewers as a way to store 
# user-specific settings (eg colours, themes etc)
# 
isis.user-profile-store=in-memory



isis.persistor.domain-object-container=org.apache.isis.core.metamodel.services.container.DomainObjectContainerDefault
#isis.persistor.domain-object-container=org.apache.isis.progmodel.wrapper.metamodel.DomainObjectContainerWrapperFactory


#################################################################################
#
# System MetaModel and Runtime Components
#
#################################################################################

#
# programming model facets
#
# Some components require an additional set of facets to be defined. 
#

# for datanucleus object store 
#isis.reflector.facets=org.apache.isis.runtimes.dflt.objectstores.jdo.datanucleus.metamodel.specloader.progmodelfacets.DataNucleusProgrammingModelFacets


#
# enable authorization
#
# authorization requires that a "facet decorator" be installed; this intercepts every
# request and delegates to the configured authorization mechanism.  
#

#isis.reflector.facets.include=org.apache.isis.runtimes.dflt.runtime.authorization.standard.AuthorizationFacetFactoryImpl


#
# enable Isis' built-in support for lazy loading/object dirtying.
#
# This configuration causes every domain entity to be "enhanced" so that objects graphs
# can be traversed transparent, and modified objects are automatically saved back to the
# object store.
#
# This setting is required by most persistors (in-memory, xml, mongodb, fileserver and sql)
# For the datanucleus objectstore, it does not matter whether it is enabled or not.
#
isis.persistor.object-factory=org.apache.isis.runtimes.dflt.bytecode.dflt.objectfactory.CglibObjectFactory
#isis.persistor.object-factory=org.apache.isis.runtimes.dflt.bytecode.javassist.objectfactory.JavassistObjectFactory
#isis.persistor.object-factory=org.apache.isis.runtimes.dflt.bytecode.identity.objectfactory.ObjectFactoryBasic


#
# enable class substitution in the meta model
#
# The reflector (Isis metamodel) must be instructed to ignore the side-effects of enabling lazy-loading;
# specifically it ignores any cglib-generated subclasses. 
#
# This setting is required whenever the isis.persistor.object-factory property has been set.
# For the datanucleus objectstore, it must be set to a specific implementation. 
#
isis.reflector.class-substitutor=org.apache.isis.runtimes.dflt.bytecode.dflt.classsubstitutor.CglibClassSubstitutor
#isis.reflector.class-substitutor=org.apache.isis.runtimes.dflt.bytecode.javassist.classsubstitutor.JavassistClassSubstitutor
#isis.reflector.class-substitutor=org.apache.isis.runtimes.dflt.bytecode.identity.classsubstitutor.ClassSubstitutorIdentity
#isis.reflector.class-substitutor=org.apache.isis.runtimes.dflt.objectstores.jdo.datanucleus.bytecode.DataNucleusTypesClassSubstitutor




################################################################################
#
# Viewer defaults
#
#################################################################################

#
# Specify viewer defaults
# 

isis.viewers.paged.standalone=30
isis.viewers.paged.parented=10



#################################################################################
#
# Application Services and fixtures
#
#################################################################################

#
# Specify the domain services.
# 
# These are the most important configuration properties in the system, as they define
# the set of the classes for Isis to instantiate as domain service singletons.
# From these domain service instances the rest of the metamodel is discovered, while the 
# end-user gains access to other domain objects by invoking the actions of the domain services.
#
# The implementations depend on the configured (see isis.persistor above) 
#

# if using the in-memory or XML object stores:
isis.services.prefix=org.apache.isis.example.bragger.objstore.dflt
isis.services=UserRepositoryDefault,TagRepositoryDefault,BragRepositoryDefault



#
# Specify the (optional) test fixtures
#
# Fixtures are used to seed the object store with an initial set of data.  For the 
# in-memory object store, the fixtures are installed on every run.  For other
# object stores, they are used only when the object store is first initialized.
#
#isis.fixtures.prefix= org.apache.isis.example.bragger.fixture
#isis.fixtures= BraggerFixture




isis.exploration.users=sven, dick, bob







###############################
# archived
###############################
#isis.reflector.facets.include=org.apache.isis.viewer.wicket.metamodel.wizardpagedesc.WizardPageDescriptionAnnotationFacetFactory
